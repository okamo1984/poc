name: Pull Request

on: pull_request

jobs:
  develop:
    name: Development
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:P@ssw0rd!@localhost:15432/todo
      GRAPHQL_ENDPOINT: /graphql
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashfiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Docker compose
        run: |
          docker-compose up -d --build todo_postgres

      - name: Install migration tool
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --version=0.2.0 --no-default-features --features postgres -- sqlx-cli

      - name: Migration
        working-directory: ./server
        run: |
          sqlx database create
          sqlx migrate run

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets

      - name: Unit tests for server
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bin todo-server

      - name: Integration tests for server
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p todo-server --test integration
